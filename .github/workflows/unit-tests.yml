name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  unit:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python - <<'PY'
import tomllib, subprocess
with open('pyproject.toml','rb') as f:
    cfg = tomllib.load(f)
deps = cfg.get('project',{}).get('dependencies',[])
dev = cfg.get('tool',{}).get('uv',{}).get('dev-dependencies',[])
pkgs = deps + dev
if pkgs:
    subprocess.check_call(['pip','install','-q',*pkgs])
PY

    - name: Run unit tests (skip e2e)
      run: |
        pytest -q -m 'not e2e'

  e2e:
    runs-on: ubuntu-latest
    needs: unit
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python - <<'PY'
import tomllib, subprocess
with open('pyproject.toml','rb') as f:
    cfg = tomllib.load(f)
deps = cfg.get('project',{}).get('dependencies',[])
dev = cfg.get('tool',{}).get('uv',{}).get('dev-dependencies',[])
pkgs = deps + dev
if pkgs:
    subprocess.check_call(['pip','install','-q',*pkgs])
PY

    - name: Install Playwright browsers
      run: |
        python -m playwright install --with-deps

    - name: Run E2E tests
      env:
        STREAMLIT_HEADLESS: 'true'
      run: |
        pytest -q -m e2e
